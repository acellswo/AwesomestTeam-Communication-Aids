;
;----------------------
;
; class dskvid
;
;	var BS : 8h, FF : 1ah, LF : 0ah, CR : 0dh, GS : 15h, RS : 1eh, BW : 11h, EC : 1bh
;
BS:	equ	08h
FF:	equ	1ah
LF:	equ	0ah
CR:	equ	0dh
GS:	equ	15h
RS:	equ	1eh
BW:	equ	11h
EC:	equ	1bh
;
;--------------------
;
;-- PRTINIT - initialize video output
;--
;-- arguments:
;--
;--	HL - str to be printed
;
; proc prtinit(string *str)
;	vidinit()
;	prtstr(str)
; end proc
;
vidinit:equ	0f800h
;
prtinit:
	call	vidinit
	call	prtstr
	ret
;
;--------------------
;
;-- PRTSTR - prints a string on the VIDEO prompting device
;--
;-- arguments:
;--
;--	HL - pointer to string
;
; proc prtstr(string @str)
; 	var OFFSET : 32
;
; 	for (i <- 1;i ~= length(str)+1;i +<-1)
; 	loop
; 		if str(i) = '\RS' then
; 			i +<- 1
; 			vidchar(EC)
; 			vidchar(byte('='))
; 			vidchar(byte(str(i+1)) + OFFSET)
; 			vidchar(byte(str(i)) + OFFSET)
; 			i +<- 1
; 		else
; 			vidchar(byte(str(i)))
; 		fi
; 	pool
; end proc
;
vidchar:equ	0f803h
;
OFFSET:	equ	32
prtstr:
	push	af			; save registers AF, BC
	push	bc
;
	ld	b,1			; i <- 1
	ld	c,(hl)
	inc	c			; c <- length(str)+1
>1:
	ld	a,b
	cp	c			; i ~= length(str)+1
	jrz	>2			; exit
	call	indexb			; a <- str(i)
	cp	RS			; str(i) = RS ?
	jrnz	>3			; no
	inc	b			; i +<- 1
	ld	a,EC
	call	vidchar			; vidchar(EC)
	ld	a,'='
	call	vidchar			; vidchar(byte('='))
	ld	a,b
	inc	a
	call	indexb			; a <- str(i+1)
	add	OFFSET
	call	vidchar			; vidchar(byte(str(i+2)) + OFFSET)
	ld	a,b
	call	indexb			; a <- str(i)
	add	OFFSET
	call	vidchar			; vidchar(byte(str(i)) + OFFSET)
	inc	b			; i +<- 1
	jr	>4
>3:
	call	vidchar			; vidchar(str(i))
>4:
	inc	b			; i +<- 1
	jr	>1
>2:
	pop	bc
	pop	af			; restore registers AF, BC
	ret
